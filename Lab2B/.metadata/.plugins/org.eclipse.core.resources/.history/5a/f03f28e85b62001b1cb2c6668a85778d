
public class WinnerManager {

	public char winner(TicTacToe ticTacToe) {
		// check for horizontal winner
		checkForHorizontalWinner(ticTacToe);
	
		// check for vertical winner
		checkForVerticalWinner(ticTacToe);
	
		// check for diagonal winner
		checkForDiagonalWinner(ticTacToe);
	
		// no winner yet
		return '-';
	}

	private char checkForDiagonalWinner(TicTacToe ticTacToe) {
		if (ticTacToe.board.charAt(0) != '-' && ticTacToe.board.charAt(4) == ticTacToe.board.charAt(0)
				&& ticTacToe.board.charAt(8) == ticTacToe.board.charAt(0))
			return ticTacToe.board.charAt(0);
		if (ticTacToe.board.charAt(2) != '-' && ticTacToe.board.charAt(4) == ticTacToe.board.charAt(2)
				&& ticTacToe.board.charAt(6) == ticTacToe.board.charAt(2))
			return ticTacToe.board.charAt(2);
		return '-';
	}

	private char checkForVerticalWinner(TicTacToe ticTacToe) {
		for (int i = 0; i < 3; ++i) {
			if (ticTacToe.board.charAt(i) != '-'
					&& ticTacToe.board.charAt(i + 3) == ticTacToe.board.charAt(i)
					&& ticTacToe.board.charAt(i + 6) == ticTacToe.board.charAt(i))
				return ticTacToe.board.charAt(i);
		}
		return '-';
	}

	private char checkForHorizontalWinner(TicTacToe ticTacToe) {
		for (int i = 0; i < 9; i += 3) {
			if (ticTacToe.board.charAt(i) != '-'
					&& ticTacToe.board.charAt(i + 1) == ticTacToe.board.charAt(i)
					&& ticTacToe.board.charAt(i + 2) == ticTacToe.board.charAt(i))
				return ticTacToe.board.charAt(i);
		}
		return '-';
	}

}
